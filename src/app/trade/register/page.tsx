"use client";
import { useState, Fragment } from "react";
import Container from "@/app/components/Container";
import FormField from "@/app/components/ui/Formfield";
import { ApiResponse, FieldForm, signup_user } from "@/app/lib/type";
import { Sparkles } from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/navigation";
import SmartNavbar from "@/app/components/ui/Navbar";
import Logo from '../../../../public/asset/images/ูููู ุชู.jpg'
import { BaseUrl } from "@/app/components/Baseurl";
import toast from 'react-hot-toast';
import axios from "axios";
import { Dialog, Transition } from '@headlessui/react';

export default function RegisterPage() {
  const router = useRouter();
  const [formData, setFormData] = useState<Record<string, any>>({});
  const [agree, setAgree] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const fields: FieldForm[] = [
    { name: "firstName", label: "ุงูุงุณู ุงูุงูู", type: "text", placeholder: "ุงุฏุฎู ุงุณูู ุงูุงูู" },
    { name: "lastName", label: "ุงูุงุณู ุงูุงุฎูุฑ", type: "text", placeholder: "ุงุฏุฎู ุงุณูู ุงูุงุฎูุฑ" },
    { name: "email", label: "ุงูุจุฑูุฏ ุงูุฅููุชุฑููู", type: "email", placeholder: "ุงุฏุฎู ุจุฑูุฏู ุงูุงููุชุฑููู" },
    { name: "phoneNumber", label: "ุฑูู ุงููุงุชู", type: "text", placeholder: "ุงุฏุฎู ุฑูู ูุงุชูู" },
    { name: "password", label: "ุงูุฑูู ุงูุณุฑู", type: "password", placeholder: "ุงุฏุฎู ุงูุฑูู ุงูุณุฑู" },
  ];

  const url = `${BaseUrl}traders/signup`;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!agree) {
      toast.error("ูุฌุจ ุงูููุงููุฉ ุนูู ุงูุดุฑูุท ูุงูุฃุญูุงู ูุจู ุงูุชุณุฌูู");
      return;
    }

    try {
      const res: ApiResponse<signup_user> = await axios.post(url, formData, {
        validateStatus: () => true,
      });

      const status = res.status;

      if (status === 200 || status === 201) {
        toast.success('ุชู ุชุณุฌูู ุงูุฏุฎูู ุจูุฌุงุญ ๐');
        router.push("/trade/login_trade");
      } else if (status === 400) {
        toast.error('ุงูุจูุงูุงุช ุบูุฑ ุตุญูุญุฉุ ุชุญูู ูู ุงูุฅุฏุฎุงู');
      } else if (status === 401) {
        toast.error('ุบูุฑ ูุตุฑุญุ ุชุญูู ูู ุงูุจุฑูุฏ ุฃู ูููุฉ ุงููุฑูุฑ');
      } else if (status === 409) {
        toast.error('ุงููุณุชุฎุฏู ููุฌูุฏ ุจุงููุนู');
      } else if (status === 500) {
        toast.error('ุฎุทุฃ ูู ุงูุณูุฑูุฑุ ุญุงูู ูุงุญููุง');
      } else {
        toast.error(`ุฎุทุฃ ุบูุฑ ูุนุฑูู: ${status}`);
      }
    } catch (error: any) {
      console.log(error);
      toast.error('ุญุฏุซ ุฎุทุฃ ูู ุนูููุฉ ุงูุชุณุฌูู');
    }
  };

  const termsText = `
ุฑูู ุงููุซููุฉ: WIMY-TC-001
ุชุงุฑูุฎ ุงูุฅุตุฏุงุฑ: 2025/05/23
ุงุณู ุงููุซููุฉ: ุงูุดุฑูุท ูุงูุฃุญูุงู ุงูุฎุงุตุฉ ุจุงูุจุงุฆุนูู ูู ููุตุฉ Wimi Tech

ูุฑุญุจูุง ุจู ูู Wimi Techุ ุดุฑููู ูู ุงููุฌุงุญ!

ููุตุฉ Wimi Tech ูู ููุตุฉ ุฅููุชุฑูููุฉ ุชูุฏู ุฅูู ุชูููู ุงูุจุงุฆุนูู ูู ุนุฑุถ ูุจูุน ููุชุฌุงุชูู ุงูุชูููุฉ ุจุทุฑููุฉ ุณููุฉ ูุขููุฉ. ููุฑุฌู ูุฑุงุกุฉ ูุฐู ุงูุดุฑูุท ูุงูุฃุญูุงู ุจุนูุงูุฉ ูุจู ุงูุงูุถูุงู ูุจุงุฆุน ุนูู ุงูููุตุฉ. ุฅู ุชุณุฌููู ูู ุงูููุตุฉ ููุนุฏ ููุงููุฉ ุตุฑูุญุฉ ููู ุนูู ุฌููุน ูุง ูุฑุฏ ูู ูุฐู ุงููุซููุฉ.

1. ุงูุฃูููุฉ:
- ูุฌุจ ุฃู ูููู ุงูุจุงุฆุน ุดุฎุตูุง ุทุจูุนููุง ุฃู ุงุนุชุจุงุฑููุง ููุชูู ุณุฌููุง ุชุฌุงุฑููุง ุณุงุฑููุง ูู ุงูุฏููุฉ ุงูุชู ูุนูู ุจูุง.
- ูุฌุจ ุฃู ูููู ุนูุฑ ุงูุจุงุฆุน 18 ุนุงููุง ูุฃูุซุฑ ุฅุฐุง ูุงู ุดุฎุตูุง ุทุจูุนููุง.

2. ุฅูุดุงุก ุงูุญุณุงุจ:
- ูุฌุจ ุชูุฏูู ูุนูููุงุช ุตุญูุญุฉ ููุงููุฉ ุฃุซูุงุก ุนูููุฉ ุงูุชุณุฌูู.
- ูุชุญูู ุงูุจุงุฆุน ูุณุคูููุฉ ุงูุญูุงุธ ุนูู ุณุฑูุฉ ุจูุงูุงุช ุงูุฏุฎูู ุงูุฎุงุตุฉ ุจู.
- ูุญู ูุฅุฏุงุฑุฉ ุงูููุตุฉ ุฑูุถ ุฃู ุชุนููู ุฃู ุญุณุงุจ ูู ุญุงู ุงูุงุดุชุจุงู ูู ูุดุงุท ุบูุฑ ูุงูููู ุฃู ูุฎุงูู ููุดุฑูุท.

3. ุงูููุชุฌุงุช ุงููุณููุญ ุจูุง:
- ููุณูุญ ููุท ุจุจูุน ุงูููุชุฌุงุช ุงูุชูููุฉ ูุงูุฅููุชุฑูููุฉ ูุซู (ุงูููุงุชูุ ุงูุญูุงุณูุจุ ุงูุฅูุณุณูุงุฑุงุชุ ุงูุจุฑูุฌูุงุช...ุฅูุฎ).
- ููููุน ุจูุน ุฃู ููุชุฌุงุช ูุญุธูุฑุฉ ูุงูููููุง ุฃู ูุง ุชุชูุงูู ูุน ุณูุงุณุงุช ุงูุฌูุฏุฉ ุงูุฎุงุตุฉ ุจุงูููุตุฉ.

4. ุงูุชุฒุงูุงุช ุงูุจุงุฆุน:
- ุงูุงูุชุฒุงู ุจุชูููุฑ ููุชุฌุงุช ุฃุตููุฉ ูุฐุงุช ุฌูุฏุฉ ุนุงููุฉ.
- ุชูุตูู ุงูุทูุจุงุช ูู ุงูููุช ุงููุญุฏุฏ ุฏูู ุชุฃุฎูุฑ.
- ุชูุฏูู ุฎุฏูุฉ ุนููุงุก ููุชุงุฒุฉ ููุนุงูุฌุฉ ุงูุดูุงูู ุจุฌุฏูุฉ.
- ุชุญุฏูุซ ุงููุฎุฒูู ุจุดูู ุฏูุฑู ูุชูุงุฏู ุจูุน ููุชุฌุงุช ุบูุฑ ูุชููุฑุฉ.

5. ุงูุนูููุงุช ูุงูุฑุณูู:
- ุชูุฑุถ Wimi Tech ุนูููุฉ ุนูู ูู ุนูููุฉ ุจูุน ุชุชู ูู ุฎูุงู ุงูููุตุฉุ ูุชูุญุฏุฏ ูููุชูุง ูู ุงุชูุงููุฉ ูููุตูุฉ.
- ุชูุฎุตู ุงูุนูููุฉ ุชููุงุฆููุง ูุจู ุชุญููู ุฃุฑุจุงุญ ุงูุจุงุฆุน.

6. ุงูุฏูุน ูุงูุชุญูููุงุช:
- ุชูุญูู ุฃุฑุจุงุญ ุงูุจุงุฆุน ุฃุณุจูุนููุง ุฃู ุดูุฑููุง ุญุณุจ ุงูุงุชูุงูุ ุฅูู ุงูุญุณุงุจ ุงูุจููู ุงููุณุฌู.
- ูุฌุจ ุฃู ุชููู ุจูุงูุงุช ุงูุญุณุงุจ ุงูุจููู ุตุญูุญุฉ ููุนูุฏ ููุจุงุฆุน ุฃู ูุคุณุณุชู ุงูุชุฌุงุฑูุฉ.

7. ุญููู ุงูููููุฉ ุงูููุฑูุฉ:
- ูุถูู ุงูุจุงุฆุน ุฃู ูุฏูู ุงูุญููู ุงููุงููููุฉ ูุจูุน ุงูููุชุฌุงุช ูุงูุนูุงูุงุช ุงูุชุฌุงุฑูุฉ ุงููุนุฑูุถุฉ.
- ูุง ุชุชุญูู Wimi Tech ูุณุคูููุฉ ุฃู ุงูุชูุงู ูุญููู ุงูููููุฉ ูุงุชุฌ ุนู ูุดุงุท ุงูุจุงุฆุน.

8. ุงููุญุชูู ูุงูุจูุงูุงุช:
- ูุชุญูู ุงูุจุงุฆุน ูุณุคูููุฉ ุงููุญุชูู ุงููุนุฑูุถ (ุตูุฑุ ูุตูุ ุฃุณุนุงุฑ).
- ุชุญุชูุธ Wimi Tech ุจุงูุญู ูู ุชุนุฏูู ุฃู ุญุฐู ุฃู ูุญุชูู ูุฎุงูู.

9. ุงูุฅููุงุก ูุงูุชุนููู:
- ูููู ูุฃู ูู ุงูุทุฑููู ุฅููุงุก ุงูุนูุงูุฉ ุจุฅุดุนุงุฑ ูุชุงุจู.
- ูุญู ูู Wimi Tech ุชุนููู ุฃู ุฅููุงุก ุญุณุงุจ ุงูุจุงุฆุน ูู ุญุงู ุฎุฑู ุงูุดุฑูุท.

10. ุงูุชุนุฏููุงุช ุนูู ุงูุดุฑูุท:
- ุชุญุชูุธ Wimi Tech ุจุญู ุชุนุฏูู ูุฐู ุงูุดุฑูุท ูู ุฃู ููุชุ ูุณูุชู ุฅุดุนุงุฑ ุงูุจุงุฆุนูู ุจุงูุชุนุฏููุงุช ุนุจุฑ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุฃู ุฅุดุนุงุฑ ุฏุงุฎู ุงููุธุงู.

11. ุงููุงููู ุงููุนููู ุจู:
- ุชุฎุถุน ูุฐู ุงูุงุชูุงููุฉ ูููุงููู ุงูุฏููุฉ ุงูุชู ุชุฃุณุณุช ุจูุง Wimi Tech.
- ุชูุญู ุงููุฒุงุนุงุช ูู ุฎูุงู ุงููููุงุช ุงููุงููููุฉ ุฃู ุงูุชุญููู ุญุณุจ ุงูุญุงูุฉ.

ูุชุทูุน ูุดุฑุงูุฉ ูุซูุฑุฉ ููุงุฌุญุฉ ูุนู ูู Wimi Tech.
  `;

  return (
    <>
      <SmartNavbar />
      <div className="min-h-screen bg-gradient-to-br from-purple-100 to-orange-100 flex items-center justify-center py-10 px-4">
        <Container>
          <form
            onSubmit={handleSubmit}
            className="bg-white shadow-2xl rounded-3xl p-8 w-full  space-y-6 border border-purple-100 mt-5"
          >
            <div className="flex flex-col items-center space-y-2">
              <Image src={Logo} alt="ุดุนุงุฑ ุงููููุน" width={60} height={60} className="rounded-full shadow-md" unoptimized />
              <h2 className="text-2xl font-bold bg-text-gradient bg-clip-text text-transparent text-center flex items-center gap-1">
                <Sparkles className="w-5 h-5 text-orange-400 animate-bounce" />
                ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ
              </h2>
            </div>

            <FormField fields={fields} data={formData} onChange={setFormData} />

            <div className="flex items-center gap-2">
              <input type="checkbox" checked={agree} onChange={(e) => setAgree(e.target.checked)} />
              <label className="text-sm text-gray-600 text-right leading-relaxed">
                ุฃูุงูู ุนูู{" "}
                <span className="text-purple-600 underline cursor-pointer hover:text-orange-500 transition" onClick={() => setIsModalOpen(true)}>
                  ุงูุดุฑูุท ูุงูุฃุญูุงู
                </span>{" "}
                ู{" "}
                <span className="text-purple-600 underline cursor-pointer hover:text-orange-500 transition" onClick={() => setIsModalOpen(true)}>
                  ุณูุงุณุฉ ุงูุฎุตูุตูุฉ
                </span>
              </label>
            </div>

            <button
              type="submit"
              disabled={!agree}
              className={`w-full font-bold py-2 rounded-lg shadow-lg transition-all duration-300 ${
                agree
                  ? "bg-black  text-white hover:scale-[1.02]"
                  : "bg-gray-300 text-gray-500 cursor-not-allowed"
              }`}
            >
              ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ
            </button>

            <p className="text-center text-sm text-gray-700">
              ูุฏูู ุญุณุงุจ ุจุงููุนูุ{" "}
              <Link href="/trade/login_trade">
                <span className="text-purple-700 font-semibold underline cursor-pointer hover:text-orange-500 transition">
                  ุชุณุฌูู ุงูุฏุฎูู
                </span>
              </Link>
            </p>
          </form>
        </Container>
      </div>

      {/* Modal */}
      <Transition appear show={isModalOpen} as={Fragment}>
        <Dialog as="div" className="relative z-50" onClose={() => setIsModalOpen(false)}>
          <Transition.Child as={Fragment} enter="ease-out duration-300" enterFrom="opacity-0" enterTo="opacity-100" leave="ease-in duration-200" leaveFrom="opacity-100" leaveTo="opacity-0">
            <div className="fixed inset-0 bg-black bg-opacity-25" />
          </Transition.Child>

          <div className="fixed inset-0 overflow-y-auto text-right">
            <div className="flex min-h-full items-center justify-center p-4 text-center">
              <Transition.Child as={Fragment} enter="ease-out duration-300" enterFrom="opacity-0 scale-95" enterTo="opacity-100 scale-100" leave="ease-in duration-200" leaveFrom="opacity-100 scale-100" leaveTo="opacity-0 scale-95">
                <Dialog.Panel className="w-full max-w-3xl transform overflow-hidden rounded-2xl bg-white p-6 text-right align-middle shadow-xl transition-all space-y-4">
                  <Dialog.Title as="h3" className="text-lg font-bold leading-6 text-purple-700">
                    ุงูุดุฑูุท ูุงูุฃุญูุงู ุงูุฎุงุตุฉ ุจุงูุจุงุฆุนูู ูู ููุตุฉ Wimi Tech
                  </Dialog.Title>
                  <div className="max-h-[60vh] overflow-y-auto text-sm leading-loose text-gray-700 whitespace-pre-wrap">
                    {termsText}
                  </div>
                  <div className="mt-4 text-left">
                    <button
                      type="button"
                      className="inline-flex justify-center rounded-md border border-transparent bg-purple-600 px-4 py-2 text-sm font-medium text-white hover:bg-purple-700"
                      onClick={() => setIsModalOpen(false)}
                    >
                      ุฅุบูุงู
                    </button>
                  </div>
                </Dialog.Panel>
              </Transition.Child>
            </div>
          </div>
        </Dialog>
      </Transition>
    </>
  );
}
